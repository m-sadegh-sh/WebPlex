// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments

using System.Collections.Generic;
using System.ServiceModel.Syndication;

using WebPlex.MvcApplication.Controllers;
using WebPlex.Web.Mvc.Feed;
#pragma warning disable 1591

#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Web;
using System.Web.Mvc;
using System.Web.Routing;

using WebPlex.MvcApplication;

[GeneratedCode("T4MVC", "2.0")]
[DebuggerNonUserCode]
public static class T4Routes {
	private static readonly AdminClass s_Admin = new AdminClass();

	public static AdminClass Admin {
		get { return s_Admin; }
	}

	public static AuthenticateController Authenticate = new T4MVC_AuthenticateController();
	public static BlogController Blog = new T4MVC_BlogController();
	public static ComponentsController Components = new T4MVC_ComponentsController();
	public static ErrorController Error = new T4MVC_ErrorController();
	public static FeedController Feed = new T4MVC_FeedController();
	public static HomeController Home = new T4MVC_HomeController();
	public static SharedController Shared = new SharedController();
}

namespace WebPlex.MvcApplication {
	using WebPlex.MvcApplication.Areas.Admin.Controllers;

	[GeneratedCode("T4MVC", "2.0")]
	[DebuggerNonUserCode]
	public class AdminClass {
		public readonly string Name = "admin";
		public ConfigurationController Configuration = new T4MVC_ConfigurationController();
		public DashboardController Dashboard = new T4MVC_DashboardController();
		public PermissionGroupController PermissionGroup = new T4MVC_PermissionGroupController();
		public Admin.SharedController Shared = new Admin.SharedController();
	}
}

namespace WebPlex.MvcApplication {
	[GeneratedCode("T4MVC", "2.0")]
	[DebuggerNonUserCode]
	public class Dummy {
		private Dummy() {}
		public static Dummy Instance = new Dummy();
	}
}

[GeneratedCode("T4MVC", "2.0")]
[DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : ActionResult, IT4MVCActionResult {
	public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null) : base() {
		this.InitMVCT4Result(area, controller, action, protocol);
	}

	public override void ExecuteResult(ControllerContext context) {}

	public string Controller { get; set; }
	public string Action { get; set; }
	public string Protocol { get; set; }
	public RouteValueDictionary RouteValueDictionary { get; set; }
}

[GeneratedCode("T4MVC", "2.0")]
[DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : PartialViewResult, IT4MVCActionResult {
	public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null) : base() {
		this.InitMVCT4Result(area, controller, action, protocol);
	}

	public string Controller { get; set; }
	public string Action { get; set; }
	public string Protocol { get; set; }
	public RouteValueDictionary RouteValueDictionary { get; set; }
}

[GeneratedCode("T4MVC", "2.0")]
[DebuggerNonUserCode]
internal partial class T4MVC_WebPlex_Web_Mvc_Feed_FeedResult : FeedResult, IT4MVCActionResult {
	public T4MVC_WebPlex_Web_Mvc_Feed_FeedResult(string area, string controller, string action, string protocol = null) : base(" ", default(IList<SyndicationItem>), "fa-IR") {
		this.InitMVCT4Result(area, controller, action, protocol);
	}

	public string Controller { get; set; }
	public string Action { get; set; }
	public string Protocol { get; set; }
	public RouteValueDictionary RouteValueDictionary { get; set; }
}

[GeneratedCode("T4MVC", "2.0")]
[DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_RedirectToRouteResult : RedirectToRouteResult, IT4MVCActionResult {
	public T4MVC_System_Web_Mvc_RedirectToRouteResult(string area, string controller, string action, string protocol = null) : base(default(RouteValueDictionary)) {
		this.InitMVCT4Result(area, controller, action, protocol);
	}

	public string Controller { get; set; }
	public string Action { get; set; }
	public string Protocol { get; set; }
	public RouteValueDictionary RouteValueDictionary { get; set; }
}

namespace WebPlex.MvcApplication {
	[GeneratedCode("T4MVC", "2.0")]
	[DebuggerNonUserCode]
	public static class Assets {
		private const string URLPATH = "~/Assets";

		public static string Url() {
			return T4MVCHelpers.ProcessVirtualPath(URLPATH);
		}

		public static string Url(string fileName) {
			return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
		}

		public static readonly string _Web_config = Url("_Web.config");

		[GeneratedCode("T4MVC", "2.0")]
		[DebuggerNonUserCode]
		public static class Fonts {
			private const string URLPATH = "~/Assets/Fonts";

			public static string Url() {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH);
			}

			public static string Url(string fileName) {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
			}

			public static readonly string Farnaz_eot = Url("Farnaz.eot");
			public static readonly string Farnaz_ttf = Url("Farnaz.ttf");
			public static readonly string Farnaz_woff = Url("Farnaz.woff");
			public static readonly string Koodak_eot = Url("Koodak.eot");
			public static readonly string Koodak_ttf = Url("Koodak.ttf");
			public static readonly string Koodak_woff = Url("Koodak.woff");
			public static readonly string Mehr_eot = Url("Mehr.eot");
			public static readonly string Mehr_ttf = Url("Mehr.ttf");
			public static readonly string Mehr_woff = Url("Mehr.woff");
			public static readonly string Titr_eot = Url("Titr.eot");
			public static readonly string Titr_ttf = Url("Titr.ttf");
			public static readonly string Titr_woff = Url("Titr.woff");
			public static readonly string Yekan_eot = Url("Yekan.eot");
			public static readonly string Yekan_ttf = Url("Yekan.ttf");
			public static readonly string Yekan_woff = Url("Yekan.woff");
		}

		[GeneratedCode("T4MVC", "2.0")]
		[DebuggerNonUserCode]
		public static class Images {
			private const string URLPATH = "~/Assets/Images";

			public static string Url() {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH);
			}

			public static string Url(string fileName) {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
			}

			public static readonly string favicon_png = Url("favicon.png");
			public static readonly string Web_config = Url("Web.config");
		}

		[GeneratedCode("T4MVC", "2.0")]
		[DebuggerNonUserCode]
		public static class Scripts {
			private const string URLPATH = "~/Assets/Scripts";

			public static string Url() {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH);
			}

			public static string Url(string fileName) {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
			}

			[GeneratedCode("T4MVC", "2.0")]
			[DebuggerNonUserCode]
			public static class Bootstrap {
				private const string URLPATH = "~/Assets/Scripts/Bootstrap";

				public static string Url() {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH);
				}

				public static string Url(string fileName) {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
				}

				public static readonly string bootstrap_affix_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-affix.min.js") ? Url("bootstrap-affix.min.js") : Url("bootstrap-affix.js");

				public static readonly string bootstrap_alert_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-alert.min.js") ? Url("bootstrap-alert.min.js") : Url("bootstrap-alert.js");

				public static readonly string bootstrap_button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-button.min.js") ? Url("bootstrap-button.min.js") : Url("bootstrap-button.js");

				public static readonly string bootstrap_carousel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-carousel.min.js") ? Url("bootstrap-carousel.min.js") : Url("bootstrap-carousel.js");

				public static readonly string bootstrap_collapse_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-collapse.min.js") ? Url("bootstrap-collapse.min.js") : Url("bootstrap-collapse.js");

				public static readonly string bootstrap_dropdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-dropdown.min.js") ? Url("bootstrap-dropdown.min.js") : Url("bootstrap-dropdown.js");

				public static readonly string bootstrap_modal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-modal.min.js") ? Url("bootstrap-modal.min.js") : Url("bootstrap-modal.js");

				public static readonly string bootstrap_popover_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-popover.min.js") ? Url("bootstrap-popover.min.js") : Url("bootstrap-popover.js");

				public static readonly string bootstrap_scrollspy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-scrollspy.min.js") ? Url("bootstrap-scrollspy.min.js") : Url("bootstrap-scrollspy.js");

				public static readonly string bootstrap_tab_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-tab.min.js") ? Url("bootstrap-tab.min.js") : Url("bootstrap-tab.js");

				public static readonly string bootstrap_tooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-tooltip.min.js") ? Url("bootstrap-tooltip.min.js") : Url("bootstrap-tooltip.js");

				public static readonly string bootstrap_transition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-transition.min.js") ? Url("bootstrap-transition.min.js") : Url("bootstrap-transition.js");

				public static readonly string bootstrap_typeahead_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-typeahead.min.js") ? Url("bootstrap-typeahead.min.js") : Url("bootstrap-typeahead.js");
			}

			[GeneratedCode("T4MVC", "2.0")]
			[DebuggerNonUserCode]
			public static class Html5Shiv {
				private const string URLPATH = "~/Assets/Scripts/Html5Shiv";

				public static string Url() {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH);
				}

				public static string Url(string fileName) {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
				}

				public static readonly string html5shiv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html5shiv.min.js") ? Url("html5shiv.min.js") : Url("html5shiv.js");
			}

			[GeneratedCode("T4MVC", "2.0")]
			[DebuggerNonUserCode]
			public static class jQuery {
				private const string URLPATH = "~/Assets/Scripts/jQuery";

				public static string Url() {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH);
				}

				public static string Url(string fileName) {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
				}

				[GeneratedCode("T4MVC", "2.0")]
				[DebuggerNonUserCode]
				public static class Core {
					private const string URLPATH = "~/Assets/Scripts/jQuery/Core";

					public static string Url() {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH);
					}

					public static string Url(string fileName) {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
					}

					public static readonly string jquery_2_0_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.0.0.min.js") ? Url("jquery-2.0.0.min.js") : Url("jquery-2.0.0.js");
				}

				[GeneratedCode("T4MVC", "2.0")]
				[DebuggerNonUserCode]
				public static class UI {
					private const string URLPATH = "~/Assets/Scripts/jQuery/UI";

					public static string Url() {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH);
					}

					public static string Url(string fileName) {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
					}

					public static readonly string jquery_ui_1_10_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.10.0.min.js") ? Url("jquery-ui-1.10.0.min.js") : Url("jquery-ui-1.10.0.js");
				}

				[GeneratedCode("T4MVC", "2.0")]
				[DebuggerNonUserCode]
				public static class Validate {
					private const string URLPATH = "~/Assets/Scripts/jQuery/Validate";

					public static string Url() {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH);
					}

					public static string Url(string fileName) {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
					}

					public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");

					public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");

					public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js")
							? Url("jquery.validate.unobtrusive.min.js")
							: Url("jquery.validate.unobtrusive.js");
				}
			}

			[GeneratedCode("T4MVC", "2.0")]
			[DebuggerNonUserCode]
			public static class WebPlex {
				private const string URLPATH = "~/Assets/Scripts/WebPlex";

				public static string Url() {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH);
				}

				public static string Url(string fileName) {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
				}

				public static readonly string Custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Custom.min.js") ? Url("Custom.min.js") : Url("Custom.js");

				public static readonly string Utilities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Utilities.min.js") ? Url("Utilities.min.js") : Url("Utilities.js");
			}
		}

		[GeneratedCode("T4MVC", "2.0")]
		[DebuggerNonUserCode]
		public static class Styles {
			private const string URLPATH = "~/Assets/Styles";

			public static string Url() {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH);
			}

			public static string Url(string fileName) {
				return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
			}

			[GeneratedCode("T4MVC", "2.0")]
			[DebuggerNonUserCode]
			public static class Bootstrap {
				private const string URLPATH = "~/Assets/Styles/Bootstrap";

				public static string Url() {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH);
				}

				public static string Url(string fileName) {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
				}

				public static readonly string accordion_less = Url("accordion.less");
				public static readonly string alerts_less = Url("alerts.less");
				public static readonly string bootstrap_less = Url("bootstrap.less");
				public static readonly string breadcrumbs_less = Url("breadcrumbs.less");
				public static readonly string button_groups_less = Url("button-groups.less");
				public static readonly string buttons_less = Url("buttons.less");
				public static readonly string carousel_less = Url("carousel.less");
				public static readonly string close_less = Url("close.less");
				public static readonly string code_less = Url("code.less");
				public static readonly string component_animations_less = Url("component-animations.less");
				public static readonly string custom_responsive_less = Url("custom-responsive.less");
				public static readonly string custom_less = Url("custom.less");
				public static readonly string dropdowns_less = Url("dropdowns.less");
				public static readonly string forms_less = Url("forms.less");
				public static readonly string grid_less = Url("grid.less");
				public static readonly string hero_unit_less = Url("hero-unit.less");

				[GeneratedCode("T4MVC", "2.0")]
				[DebuggerNonUserCode]
				public static class img {
					private const string URLPATH = "~/Assets/Styles/Bootstrap/img";

					public static string Url() {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH);
					}

					public static string Url(string fileName) {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
					}

					public static readonly string glyphicons_halflings_white_png = Url("glyphicons-halflings-white.png");
					public static readonly string glyphicons_halflings_png = Url("glyphicons-halflings.png");
				}

				public static readonly string labels_badges_less = Url("labels-badges.less");
				public static readonly string layouts_less = Url("layouts.less");
				public static readonly string media_less = Url("media.less");
				public static readonly string mixins_less = Url("mixins.less");
				public static readonly string modals_less = Url("modals.less");
				public static readonly string navbar_less = Url("navbar.less");
				public static readonly string navs_less = Url("navs.less");
				public static readonly string pager_less = Url("pager.less");
				public static readonly string pagination_less = Url("pagination.less");
				public static readonly string popovers_less = Url("popovers.less");
				public static readonly string progress_bars_less = Url("progress-bars.less");
				public static readonly string reset_less = Url("reset.less");
				public static readonly string responsive_1200px_min_less = Url("responsive-1200px-min.less");
				public static readonly string responsive_767px_max_less = Url("responsive-767px-max.less");
				public static readonly string responsive_768px_979px_less = Url("responsive-768px-979px.less");
				public static readonly string responsive_navbar_less = Url("responsive-navbar.less");
				public static readonly string responsive_utilities_less = Url("responsive-utilities.less");
				public static readonly string responsive_less = Url("responsive.less");
				public static readonly string scaffolding_less = Url("scaffolding.less");
				public static readonly string sprites_less = Url("sprites.less");
				public static readonly string tables_less = Url("tables.less");
				public static readonly string thumbnails_less = Url("thumbnails.less");
				public static readonly string tooltip_less = Url("tooltip.less");
				public static readonly string type_less = Url("type.less");
				public static readonly string utilities_less = Url("utilities.less");
				public static readonly string variables_less = Url("variables.less");
				public static readonly string wells_less = Url("wells.less");
			}

			[GeneratedCode("T4MVC", "2.0")]
			[DebuggerNonUserCode]
			public static class jQuery {
				private const string URLPATH = "~/Assets/Styles/jQuery";

				public static string Url() {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH);
				}

				public static string Url(string fileName) {
					return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
				}

				[GeneratedCode("T4MVC", "2.0")]
				[DebuggerNonUserCode]
				public static class UI {
					private const string URLPATH = "~/Assets/Styles/jQuery/UI";

					public static string Url() {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH);
					}

					public static string Url(string fileName) {
						return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
					}

					[GeneratedCode("T4MVC", "2.0")]
					[DebuggerNonUserCode]
					public static class themes {
						private const string URLPATH = "~/Assets/Styles/jQuery/UI/themes";

						public static string Url() {
							return T4MVCHelpers.ProcessVirtualPath(URLPATH);
						}

						public static string Url(string fileName) {
							return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
						}

						[GeneratedCode("T4MVC", "2.0")]
						[DebuggerNonUserCode]
						public static class @base {
							private const string URLPATH = "~/Assets/Styles/jQuery/UI/themes/base";

							public static string Url() {
								return T4MVCHelpers.ProcessVirtualPath(URLPATH);
							}

							public static string Url(string fileName) {
								return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
							}

							[GeneratedCode("T4MVC", "2.0")]
							[DebuggerNonUserCode]
							public static class images {
								private const string URLPATH = "~/Assets/Styles/jQuery/UI/themes/base/images";

								public static string Url() {
									return T4MVCHelpers.ProcessVirtualPath(URLPATH);
								}

								public static string Url(string fileName) {
									return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName);
								}

								public static readonly string animated_overlay_gif = Url("animated-overlay.gif");
								public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
								public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
								public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
								public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
								public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
								public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
								public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
								public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
								public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
								public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
								public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
								public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
								public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
								public static readonly string Web_config = Url("Web.config");
							}

							public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");

							public static readonly string jquery_ui_accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.accordion.min.css") ? Url("jquery.ui.accordion.min.css") : Url("jquery.ui.accordion.css");

							public static readonly string jquery_ui_autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.min.css")
									? Url("jquery.ui.autocomplete.min.css")
									: Url("jquery.ui.autocomplete.css");

							public static readonly string jquery_ui_button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.button.min.css") ? Url("jquery.ui.button.min.css") : Url("jquery.ui.button.css");

							public static readonly string jquery_ui_core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.core.min.css") ? Url("jquery.ui.core.min.css") : Url("jquery.ui.core.css");

							public static readonly string jquery_ui_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker.min.css") ? Url("jquery.ui.datepicker.min.css") : Url("jquery.ui.datepicker.css");

							public static readonly string jquery_ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.dialog.min.css") ? Url("jquery.ui.dialog.min.css") : Url("jquery.ui.dialog.css");

							public static readonly string jquery_ui_menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.menu.min.css") ? Url("jquery.ui.menu.min.css") : Url("jquery.ui.menu.css");

							public static readonly string jquery_ui_progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.progressbar.min.css") ? Url("jquery.ui.progressbar.min.css") : Url("jquery.ui.progressbar.css");

							public static readonly string jquery_ui_resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.resizable.min.css") ? Url("jquery.ui.resizable.min.css") : Url("jquery.ui.resizable.css");

							public static readonly string jquery_ui_selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.selectable.min.css") ? Url("jquery.ui.selectable.min.css") : Url("jquery.ui.selectable.css");

							public static readonly string jquery_ui_slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.slider.min.css") ? Url("jquery.ui.slider.min.css") : Url("jquery.ui.slider.css");

							public static readonly string jquery_ui_spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.spinner.min.css") ? Url("jquery.ui.spinner.min.css") : Url("jquery.ui.spinner.css");

							public static readonly string jquery_ui_tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tabs.min.css") ? Url("jquery.ui.tabs.min.css") : Url("jquery.ui.tabs.css");

							public static readonly string jquery_ui_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.theme.min.css") ? Url("jquery.ui.theme.min.css") : Url("jquery.ui.theme.css");

							public static readonly string jquery_ui_tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tooltip.min.css") ? Url("jquery.ui.tooltip.min.css") : Url("jquery.ui.tooltip.css");
						}
					}
				}
			}
		}
	}

	[GeneratedCode("T4MVC", "2.0")]
	[DebuggerNonUserCode]
	public static partial class Bundles {
		[GeneratedCode("T4MVC", "2.0")]
		[DebuggerNonUserCode]
		public static partial class Scripts {}

		[GeneratedCode("T4MVC", "2.0")]
		[DebuggerNonUserCode]
		public static partial class Styles {}
	}
}

[GeneratedCode("T4MVC", "2.0")]
[DebuggerNonUserCode]
internal static class T4MVCHelpers {
	// You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
	// e.g. you can prepend a domain, or append a query string:
	//      return "http://localhost" + path + "?foo=bar";
	private static string ProcessVirtualPathDefault(string virtualPath) {
		// The path that comes in starts with ~/ and must first be made absolute
		var path = VirtualPathUtility.ToAbsolute(virtualPath);

		// Add your own modifications here before returning the path
		return path;
	}

	// Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
	public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

	// Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
	public static Func<string, string> TimestampString = T4Extensions.TimestampString;

	// Logic to determine if the app is running in production or dev environment
	public static bool IsProduction() {
		return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled);
	}
}

namespace WebPlex.MvcApplication {
	public static partial class Bundles {
		public static partial class Scripts {
			public const string Html5Shiv = "~/assets/scripts/html5shiv.js";
			public const string jQueryCore = "~/assets/scripts/jquery/core.js";
			public const string jQueryValidate = "~/assets/scripts/jquery/validate.js";
			public const string jQueryUI = "~/assets/scripts/jquery/ui.js";
			public const string Bootstrap = "~/assets/scripts/bootstrap.js";
			public const string WebPlex = "~/assets/scripts/webplex.js";
		}

		public static partial class Styles {
			public const string jQueryUI = "~/assets/styles/jquery/ui/themes/base.css";
			public const string Bootstrap = "~/assets/styles/bootstrap.css";
		}
	}
}

#endregion T4MVC

#pragma warning restore 1591