@model NavItemComponent

@helper RenderSubItems(IList<NavItemComponent> subItems) {
	<ul class="dropdown-menu">
		@foreach (var subItem in subItems) {
			<li>
				@Html.ActionLink(subItem.Text, subItem.Result, subItem.Attributes)
			</li>
			if (subItem.AddDivider) {
				<li class="divider"></li>
			}
		}
	</ul>
}

@{
	var active = Html.IsCurrent(Model.Result) ? "active" : null;
	var anyChildren = Model.SubItems.Any();
	var dropdown = anyChildren ? "dropdown" : null;
}

<li class="@active @dropdown">
	@if (anyChildren) {
		<a href="@(Model.Result != null ? Url.Action(Model.Result) : "")" 
		   class="dropdown-toggle"
		   data-toggle="dropdown"
			@Model.WriteAttributes()>
			@Model.Text <b class="caret"></b>
		</a>
		@RenderSubItems(Model.SubItems)
	} else {
		if (Model.Result == null) {
			<a @Model.WriteAttributes()>@Model.Text</a>
		} else {
			@Html.ActionLink(Model.Text, Model.Result, Model.Attributes)
		}
	}
</li>
@if (Model.AddDivider) {
	<li class="divider-vertical"></li>
}